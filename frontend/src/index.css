@import url('https://fonts.googleapis.com/css2?family=Inter:ital,wght@0,100..900;1,100..900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Apply Inter font to the entire body */
body {
  margin: 0;
  font-family: 'Inter', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* --- DELETED OLD BLINK ANIMATION --- */
/* The old blink animation has been removed as it conflicted with the new one. */


/*
  The main container for the login page, now covering the whole screen.
  We'll use a specific background image for the blurred effect as an overlay
  or pseudo-element. The image path should be correct for your `assets_logo` variable.
*/
.login-page-background {
    /* Main background color */
    background-color: #1A202C; /* Dark blue/gray */
    position: relative;
    overflow: hidden; /* Ensures blur/mask effects are contained */
}

/* Glassmorphic card styling */
.glassmorphic-card {
  background-color: rgba(255, 255, 255, 0.08); /* Semi-transparent white */
  /* This is the magic for the glass effect */
  backdrop-filter: blur(12px); /* Adjust blur strength as needed */
  -webkit-backdrop-filter: blur(12px); /* For Safari support */
  border: 1px solid rgba(255, 255, 255, 0.18); /* Subtle white border */
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37); /* Stronger shadow for depth */
}

/* Custom font utility classes for specific weights from Inter */
.font-inter-thin {
  font-weight: 100;
}
.font-inter-extralight {
  font-weight: 200;
}
.font-inter-regular {
  font-weight: 400;
}
/* Already have font-extrabold from Tailwind for 800 */

/*
  Override default input styles for the glassmorphic form.
  This ensures inputs are transparent, text is white, and placeholders are visible.
*/
.glassmorphic-card input {
  background-color: rgba(255, 255, 255, 0.05) !important; /* Slightly more transparent */
  border: 1px solid rgba(255, 255, 255, 0.15) !important;
  color: white !important;
}

.glassmorphic-card input::placeholder {
  color: rgba(255, 255, 255, 0.6) !important; /* Lighter placeholder text */
}

.glassmorphic-card label {
    color: white !important; /* Ensure labels are white */
}


/* --- NEW STYLES FOR LOOPING TYPEWRITER --- */

/* Class for the typewriter to apply the requested font style (Inter ExtraLight 200 Italic) */
.typewriter-font {
  font-family: 'Inter', sans-serif;
  font-weight: 200;
  font-style: italic;
  /* Uses a CSS variable set by the JS component for dynamic color, with a fallback */
  color: var(--typewriter-color, #4b5563); /* Default text-gray-600 */
  transition: color 0.5s ease-in-out;
}

/* The blinking animation for the cursor */
.cursor-blink {
    animation: blink 1s step-end infinite;
    /* The cursor will also get its color from the CSS variable for a perfect match */
    color: var(--typewriter-color, #4b5563);
    transition: color 0.5s ease-in-out;
}

@keyframes blink {
    from, to {
        color: transparent;
    }
    50% {
        /* 'inherit' makes the cursor take on the color of its parent, which is set by the JS */
        color: inherit;
    }
}

/* Ensure the typing effect span itself inherits the parent's color correctly */
.typing-effect {
    color: inherit;
}

.scan-line {
  top: 0;
  animation: scan 2.5s ease-in-out infinite;
}

@keyframes scan {
  0% { top: -10%; }
  50% { top: 110%; }
  100% { top: 110%; }
}

.chunk {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  background-color: #67e8f9; /* cyan-300 */
  border-radius: 50%;
  opacity: 0;
  transform: translate(-50%, -50%) scale(0);
  animation: burst 2.5s ease-out infinite;
  animation-delay: var(--delay, 0s);
}

@keyframes burst {
  0%, 40% { /* Start bursting after scan line passes halfway */
    opacity: 0;
    transform: translate(-50%, -50%) scale(0);
  }
  60% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    /* Use CSS variables passed from the component for dynamic positions */
    transform: translate(var(--x), var(--y)) scale(0);
  }
}